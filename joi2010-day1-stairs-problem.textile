---
layout: default
title: "Stairs(階段) - joi2010-day1"
source: "第9回日本情報オリンピック 春季トレーニング合宿"
source_url: "http://www.ioi-jp.org/camp/2010/2010-sp-tasks/index.html"
timelimit: "1.5秒"
memlimit: "64MB"
---

あなたは, 階段の上り方が何通りあるかを調べたくなった. 階段はN段からなり, k(1 &le; k &le; N) 段目の段差はh[k] mm である.

あなたは, 段差の和がP mm 以下の段を一度に上ることができる. 階段を上るときに, 同じ段で足踏みしたり, 下ったりはしない. また, 用いた段が同じ時に同じ上り方とみなす.

h2. 課題(TASK)

階段の上り方の場合の数の1234567による余りを求めよ.

h2. 制限(CONSTRAINTS)

|1 &le; N &le; 500,000|階段の段数|
|1 &le; P &le; 500,000,000|ジャンプ力|
|1 &le; h[k]|k段目の階段の段差|
|h[1] + … + h[N] &le; 500,000,000|

h2. 入力(INPUT)

標準入力から以下の入力を読み込め.

* 1行目には整数NとPが空白を区切りとして書かれている.
* 続くN行のうちのk行目には整数h[k]が書かれている.

h2. 出力(OUTPUT)

標準出力に以下のデータを出力せよ.

* 1行目にはあなたの階段の上り方の場合の数の1234567による余りを表す, 1つの整数を含んでいなければならない.

h2. 採点基準(GRADING)

50点分のテストグループにおいて, Nは3,000を超えない.

h2. 入出力例(EXAMPLE)

|_. 入力例(Sample Input)|_. 出力例(Sample Output)|
|<samp>6 350
315
191
98
70
126
200</samp>|<samp>9</samp>|

この階段は6段からなり, 上り方は

* 1,2,3,4,5,6
* 1,2,3,4,6
* 1,2,3,5,6
* 1,2,4,5,6
* 1,2,4,6
* 1,2,5,6
* 1,3,4,5,6
* 1,3,4,6
* 1,3,5,6

の9 通りである. ただし, 例えば1段目と3段目と5段目を用いて6段目に上る方法を1,3,5,6と表している．

