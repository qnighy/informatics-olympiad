---
layout: default
title: "Invitation(招待) - joi2012-day4"
source: "第11回日本情報オリンピック 日本代表選手選考会"
source_url: "http://www.ioi-jp.org/camp/2012/2012-sp-tasks/index.html"
timelimit: "3秒"
memlimit: "128MB"
---

20XX 年，ついに IOI が JOI 国の JOI 町で行われることになり，これを記念してパーティーが開かれることになった．JOI 町には <var>A</var> 匹の犬 (<var>1, 2, …, A</var> の番号がついている) と <var>B</var> 匹の猫 (<var>1, 2, …, B</var> の番号がついている) がいる．あなたはこの <var>A + B</var> 匹みんなをパーティーに招待しようと考えた．

犬たちと猫たちの間には，<var>N</var> 個の *仲良しグループ* がある． <var>i</var> 番目の仲良しグループは番号が <var>P_i</var> 以上 <var>Q_i</var> 以下の犬たち <var>Q_i - P_i + 1</var> 匹と番号が <var>R_i</var> 以上 <var>S_i</var> 以下の猫たち <var>S_i - R_i + 1</var> 匹からなる．また，各仲良しグループには *仲良し度* と呼ばれる正の整数が定まっている．<var>i</var> 番目の仲良しグループの仲良し度は <var>T_i</var> である．<var>1</var> 匹の犬や <var>1</var> 匹の猫が複数の仲良しグループに所属しているかもしれないし，どの仲良しグループにも所属していない犬や猫がいるかもしれない．

あなたは番号 <var>C</var> の犬と非常に仲が良く，その犬の招待に既に成功した．あなたは以下の行動を繰り返して残りの犬たちと猫たちを招待することにした．
* <var>A + B</var> 匹みんなを既に招待できていれば終了する．
* まだ誘えていない犬または猫それぞれに対して，誘うときの *幸せ値* を考える．幸せ値とは，その犬または猫が所属している仲良しグループであって，既に招待することに成功した犬または猫が <var>1</var> 匹以上所属しているもののうちの，最大の仲良し度である．そのような仲良しグループが存在しない場合は幸せ値は <var>0</var> となる．
* 幸せ値が最大の犬または猫を選ぶ．そのような犬または猫が複数いる場合は，犬を優先し，それでも <var>1</var> 匹に定まらない場合は，番号が小さい方を優先する．
* 選ばれた犬または猫の幸せ値が <var>0</var> ならば，招待は失敗して終了する．そうでなければ，選ばれた犬または猫を招待することに成功する．

あなたは，この招待方法がどういう結果になるのかを前もって計算することにした．

h2. 課題

犬の数 <var>A</var>，猫の数 <var>B</var>，あなたと非常に仲が良い犬の番号 <var>C</var>，および <var>N</var> 個の仲良しグループの情報が与えられたとき，<var>A + B</var> 匹みんなを招待することに成功するかどうかを判定し，また，成功する場合は，各ステップで選ばれる犬または猫の幸せ値の合計がいくつになるかを求めるプログラムを作成せよ．

h2. 制限


| <var>1 \leqq A \leqq 1\,000\,000\,000</var> | 犬の数 |
| <var>1 \leqq B \leqq 1\,000\,000\,000</var> | 猫の数 |
| <var>1 \leqq N \leqq 100\,000</var> | 仲良しグループの個数 |
| <var>1 \leqq T_i \leqq 1\,000\,000\,000</var> | 仲良し度 |

h2. 入力

標準入力から以下の入力を読み込め．

* <var>1</var> 行目には整数 <var>A, B, C (1 \leqq C \leqq A)</var> が空白を区切りとして書かれており，それぞれ犬の数，猫の数，あなたと非常に仲が良い犬の番号を表す．
* <var>2</var> 行目には整数 <var>N</var> が書かれており，仲良しグループの個数を表す．
* <var>2 + i</var> 行目 (<var>1 \leqq i \leqq N</var>) には整数<var>P_i, Q_i, R_i, S_i, T_i (1 \leqq P_i \leqq Q_i \leqq A, 1 \leqq R_i \leqq S_i \leqq B)</var> が空白を区切りとして書かれており，<var>i</var> 番目の仲良しグループは番号が <var>P_i</var> 以上 <var>Q_i</var> 以下の犬たちと番号が <var>R_i</var> 以上 <var>S_i</var> 以下の猫たちからなり，仲良し度が <var>T_i</var> であることを表す．

h2. 出力

標準出力に，次に示される整数1つを1行で出力せよ．
* <var>A + B</var> 匹みんなを招待することに成功する場合，各ステップで選ばれる犬または猫の幸せ値の合計を表す整数．
* 招待が途中で失敗する場合，整数 <var>-1</var>．

h2. 採点基準

* 採点用データのうち，配点の 30% 分については，<var>A \leqq 1\,000</var>，<var>B \leqq 1\,000</var>，<var>N \leqq 2\,000</var> を満たす．

* 採点用データのうち，配点の 50% 分については，<var>N \leqq 2\,000</var> を満たす．

h2. 入出力例

|_. 入力例1|_. 出力例1|
|<samp>5 6 3
4
2 4 1 3 20
1 2 2 4 40
4 5 2 3 30
4 4 4 6 10</samp>|<samp>280</samp>|

この例では，犬たちと猫たちは次のように招待される．
* あなたは番号 <var>3</var> の犬 (以下「犬 <var>3</var> 」のように呼ぶ) の招待に既に成功している．
* 幸せ値を計算すると，犬<var>2</var>：<var>20</var>，犬<var>4</var>：<var>20</var>，猫<var>1</var>：<var>20</var>，猫<var>2</var>：<var>20</var>，猫<var>3</var>：<var>20</var>，他の招待されていない犬や猫：<var>0</var>である．あなたは犬<var>2</var>を選び，招待に成功する．
* 幸せ値を計算すると，犬<var>1</var>：<var>40</var>，犬<var>4</var>：<var>20</var>，猫<var>1</var>：<var>20</var>，猫<var>2</var>：<var>40</var>，猫<var>3</var>：<var>40</var>，猫<var>4</var>：<var>40</var>，他の招待されていない犬や猫：<var>0</var>である．あなたは犬<var>1</var>を選び，招待に成功する．
* 以下同様に招待を続けると，以下の表の順番ですべての犬と猫が招待される．

|_. 動物|_. 番号|_. 幸せ値|
|犬|3|==---==|
|犬|2|20|
|犬|1|40|
|猫|2|40|
|猫|3|40|
|猫|4|40|
|犬|4|30|
|犬|5|30|
|猫|1|20|
|猫|5|10|
|猫|6|10|

表の「幸せ値」の列の値は，その犬または猫を誘うときの幸せ値を表している．これらの合計である <var>280</var> を出力する．

|_. 入力例2|_. 出力例2|
|<samp>10 10 1
2
1 5 1 5 3
6 10 6 10 4</samp>|<samp>-1</samp>|

この例では，犬<var>1</var>，犬<var>2</var>，犬<var>3</var>，犬<var>4</var>，犬<var>5</var>，猫<var>1</var>，猫<var>2</var>，猫<var>3</var>，猫<var>4</var>，猫<var>5</var>の<var>10</var>匹の招待の後に選ばれる犬<var>6</var>は幸せ値<var>0</var>であるため，招待は途中で失敗する．
